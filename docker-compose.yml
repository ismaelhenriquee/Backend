services:
  app:
    platform: linux/amd64
    build:
      context: .
      dockerfile: dev.Dockerfile
    working_dir: /app
    ports:
      - "3001:3001"
    image: t3-app
    env_file: .env
    volumes:
      - .:/home/node/app  # Monta todo o projeto no container
      - ./node_modules:/home/node/app/node_modules
  db:
    image: postgres:latest
    container_name: ${PROJECT_NAME}-db
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  pghero:
    image: ankane/pghero
    container_name: ${PROJECT_NAME}-pghero
    restart: unless-stopped
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@host.docker.internal:${DATABASE_PORT}/${DATABASE_DB}
    ports:
      - "8080:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    profiles:
      - perf

  test-db:
    image: postgres
    container_name: ${PROJECT_NAME}-test-db
    env_file: .env
    environment:
      - POSTGRES_USER=${DATABASE_TEST_USER}
      - POSTGRES_PASSWORD=${DATABASE_TEST_PASSWORD}
      - POSTGRES_DB=${DATABASE_TEST_DB}
    ports:
      - "${DATABASE_TEST_PORT}:5432"

volumes:
  pgdata:

    # Documentação usada para a construção desse arquivo
    # https://www.digitalocean.com/community/tutorials/containerizing-a-node-js-application-for-development-with-docker-compose-pt
    # (principalmente o passo 4)
